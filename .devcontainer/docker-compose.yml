services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    # restart: always
    links:
      - mongodb
      - meilisearch
      - rag_api
    container_name: chat-app-lcdev
    ports:
      - 80:80               # Change it to 9000:3080 to use nginx
    extra_hosts: # if you are running APIs on docker you need access to, you will need to uncomment this line and next
    - "host.docker.internal:host-gateway"

    volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspaces:cached
      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      - /var/run/docker.sock:/var/run/docker.sock 
      - ./.claude:/workspaces/.claude
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      # - CHATGPT_REVERSE_PROXY=http://host.docker.internal:8080/api/conversation # if you are hosting your own chatgpt reverse proxy with docker
      # - OPENAI_REVERSE_PROXY=http://host.docker.internal:8070/v1/chat/completions # if you are hosting your own chatgpt reverse proxy with docker
      - MEILI_HOST=http://meilisearch:7700
      - CLAUDE_CONFIG_DIR=/workspaces/.claude
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}

    env_file:
      - ../.env

    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:another-service
    
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    user: vscode

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"  

  mongodb:
    container_name: chat-mongodb-lcdev
    image: mongo
    # restart: always
    volumes:
      - ./data/mongodb:/data/db
    command: mongod --noauth

    env_file:
      - ../.env

  meilisearch:
    container_name: chat-meilisearch-lcdev
    image: getmeili/meilisearch:v1.5
    # restart: always

    environment:
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=5c71cf56d672d009e36070b5bc5e47b743535ae55c818ae3b735bb6ebfb4ba63
    volumes:
      - ./data/meili_data_v1.5:/meili_data
  
  vectordb:
    container_name: vectordb-lcdev
    image: ankane/pgvector:latest
    env_file:
      - ../.env
    # restart: always
    volumes:
      - ./datae/pg:/var/lib/postgresql/data
  
  rag_api:
    container_name: rag_api-lcdev
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    # restart: always
    depends_on:
      - vectordb
    env_file:
      - ../.env

volumes:
  pgdata-lcdev:
