const fetch = require('node-fetch');

async function testGraphQL() {
  const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk0MjExMjM5LCJhYWkiOjExLCJ1aWQiOjE3NzE5NjYwLCJpYWQiOiIyMDIwLTEyLTIzVDIwOjU4OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo3Nzc1MTUwLCJyZ24iOiJ1c2UxIn0.Gg8pbEhIdLEwlVu4azaVQK137bVbUMSww__yqIR1kTM';
  const boardId = '9261805849';
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π GraphQL –∑–∞–ø—Ä–æ—Å getItems...');
  
  // –¢–µ—Å—Ç 1: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å
  const query1 = `{
    boards(ids: [${boardId}]) {
      name
      id
    }
  }`;
  
  console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Å–∫–µ');
  try {
    const response1 = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({ query: query1 })
    });
    
    const data1 = await response1.json();
    if (data1.errors) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 1:', data1.errors);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç 1 —É—Å–ø–µ—à–µ–Ω:', data1.data.boards[0].name);
    }
  } catch (error) {
    console.log('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ 1:', error.message);
  }
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ—Å—Ç–µ–π—à–∏–π –∑–∞–ø—Ä–æ—Å items –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const query2 = `{
    boards(ids: [${boardId}]) {
      items {
        id
        name
      }
    }
  }`;
  
  console.log('üìã –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤');
  try {
    const response2 = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({ query: query2 })
    });
    
    const data2 = await response2.json();
    if (data2.errors) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 2:', data2.errors);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç 2 —É—Å–ø–µ—à–µ–Ω, —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', data2.data.boards[0].items.length);
    }
  } catch (error) {
    console.log('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ 2:', error.message);
  }
  
  // –¢–µ—Å—Ç 3: –° –ª–∏–º–∏—Ç–æ–º
  const query3 = `{
    boards(ids: [${boardId}]) {
      items(limit: 5) {
        id
        name
      }
    }
  }`;
  
  console.log('üìã –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ª–∏–º–∏—Ç–æ–º');
  try {
    const response3 = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({ query: query3 })
    });
    
    const data3 = await response3.json();
    if (data3.errors) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ 3:', data3.errors);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç 3 —É—Å–ø–µ—à–µ–Ω, —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', data3.data.boards[0].items.length);
    }
  } catch (error) {
    console.log('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ç–µ—Å—Ç–µ 3:', error.message);
  }
}

testGraphQL(); 