const MondayTool = require('./../../api/app/clients/tools/structured/MondayTool');

/**
 * –ü–†–û–°–¢–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ë–û–ß–ò–• –§–£–ù–ö–¶–ò–ô
 */
async function testWorkingFunctions() {
  const apiKey = process.env.MONDAY_API_KEY;
  
  if (!apiKey) {
    console.error('‚ùå MONDAY_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    process.exit(1);
  }

  const mondayTool = new MondayTool({ apiKey });
  const testBoardId = '9261805849';

  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–°–¢–´–• –†–ê–ë–û–ß–ò–• –§–£–ù–ö–¶–ò–ô');
  console.log('=' .repeat(50));

  try {
    // 1. –¢–µ—Å—Ç getBoards - –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Ñ—É–Ω–∫—Ü–∏—è
    console.log('\nüìã 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º getBoards...');
    const boardsResult = await mondayTool.getBoards({ limit: 3 });
    const boards = JSON.parse(boardsResult);
    console.log('‚úÖ getBoards —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å–æ–∫: ${boards.data.length}`);

    // 2. –¢–µ—Å—Ç getBoard - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–æ—Å–∫–µ
    console.log('\nüìã 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º getBoard...');
    const boardResult = await mondayTool.getBoard({ 
      boardId: testBoardId,
      includeItems: false,
      includeGroups: true,
      includeColumns: true
    });
    const board = JSON.parse(boardResult);
    console.log('‚úÖ getBoard —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log(`   üìä –î–æ—Å–∫–∞: ${board.data.name}`);

    // 3. –¢–µ—Å—Ç createItem - —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    console.log('\n‚ûï 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º createItem...');
    const itemResult = await mondayTool.createItem({
      boardId: testBoardId,
      itemName: `Test Item ${Date.now()}`
    });
    const item = JSON.parse(itemResult);
    console.log('‚úÖ createItem —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log(`   üìä –°–æ–∑–¥–∞–Ω —ç–ª–µ–º–µ–Ω—Ç: ${item.data.name} (ID: ${item.data.id})`);

    // 4. –¢–µ—Å—Ç getColumnsInfo - –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
    console.log('\nüìã 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º getColumnsInfo...');
    const columnsResult = await mondayTool.getColumnsInfo({ boardId: testBoardId });
    const columns = JSON.parse(columnsResult);
    console.log('‚úÖ getColumnsInfo —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫: ${columns.data.length}`);

    // 5. –¢–µ—Å—Ç getWorkspaces
    console.log('\nüè¢ 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º getWorkspaces...');
    const workspacesResult = await mondayTool.getWorkspaces({ limit: 3 });
    const workspaces = JSON.parse(workspacesResult);
    console.log('‚úÖ getWorkspaces —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ workspaces: ${workspaces.data.length}`);

    console.log('\n');
    console.log('=' .repeat(50));
    console.log('üéâ –í–°–ï –ë–ê–ó–û–í–´–ï –§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!');
    console.log('=' .repeat(50));

    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏
    console.log('\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–ü–†–û–©–ï–ù–ù–´–• –ü–†–û–ë–õ–ï–ú–ù–´–• –§–£–ù–ö–¶–ò–ô:');
    console.log('-' .repeat(50));

    // –¢–µ—Å—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ getItems
    console.log('\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–π getItems...');
    try {
      const simpleQuery = `
        query {
          boards(ids: [${testBoardId}]) {
            id
            name
            items_page(limit: 3) {
              items {
                id
                name
              }
            }
          }
        }
      `;
      
      const result = await mondayTool.makeGraphQLRequest(simpleQuery, {});
      console.log('‚úÖ –ü—Ä–æ—Å—Ç–æ–π getItems —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log(`   üìä –≠–ª–µ–º–µ–Ω—Ç–æ–≤: ${result.boards[0].items_page.items.length}`);
    } catch (error) {
      console.log('‚ùå getItems –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testWorkingFunctions(); 