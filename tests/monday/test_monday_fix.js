#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Monday.com API
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ API –∑–∞–ø—Ä–æ—Å—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º Authorization
 */

const MondayTool = require('./AI-experts-OS/api/app/clients/tools/structured/MondayTool');

// –¶–≤–µ—Ç–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
const colors = {
  reset: '\x1b[0m',
  bright: '\x1b[1m',
  red: '\x1b[31m',
  green: '\x1b[32m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  magenta: '\x1b[35m',
  cyan: '\x1b[36m'
};

async function testMondayAPI() {
  console.log(`${colors.bright}${colors.blue}=== Monday.com API Fix Test ===${colors.reset}\n`);

  // –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ—Ç —Ç–æ–∫–µ–Ω –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω
  const API_KEY = process.env.MONDAY_API_KEY || 'YOUR_API_KEY_HERE';
  
  if (API_KEY === 'YOUR_API_KEY_HERE') {
    console.log(`${colors.red}‚ùå –û—à–∏–±–∫–∞: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MONDAY_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç–µ –≤ –∫–æ–¥–µ${colors.reset}`);
    console.log('   –ü—Ä–∏–º–µ—Ä: MONDAY_API_KEY="–≤–∞—à_—Ç–æ–∫–µ–Ω" node test_monday_fix.js');
    process.exit(1);
  }

  const mondayTool = new MondayTool({ MONDAY_API_KEY: API_KEY });

  console.log(`${colors.cyan}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization...${colors.reset}`);
  console.log(`   Authorization: Bearer ${API_KEY.substring(0, 10)}...`);
  console.log();

  // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª—É—á–∞–∏
  const tests = [
    {
      name: 'getBoards',
      action: async () => await mondayTool.getBoards({ limit: 5 }),
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å–æ–∫'
    },
    {
      name: 'getWorkspaces',
      action: async () => await mondayTool.getWorkspaces({ limit: 5 }),
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ workspace'
    },
    {
      name: 'getAccount',
      action: async () => await mondayTool.getAccount(),
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ'
    },
    {
      name: 'getUsers',
      action: async () => await mondayTool.getUsers({ limit: 5 }),
      description: '–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'
    }
  ];

  let successCount = 0;
  let failCount = 0;

  for (const test of tests) {
    console.log(`${colors.bright}üß™ –¢–µ—Å—Ç: ${test.description}${colors.reset}`);
    console.log(`   Action: ${test.name}`);
    
    try {
      const result = await test.action();
      const data = JSON.parse(result);
      
      if (data.success) {
        console.log(`   ${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ!${colors.reset}`);
        console.log(`   –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data.data).substring(0, 100)}...`);
        successCount++;
      } else {
        console.log(`   ${colors.red}‚ùå –ù–µ—É–¥–∞—á–Ω–æ: ${data.error}${colors.reset}`);
        failCount++;
      }
    } catch (error) {
      console.log(`   ${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      failCount++;
    }
    console.log();
  }

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –¥–æ—Å–∫–æ–π (–µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å ID –¥–æ—Å–∫–∏)
  const boardId = process.env.MONDAY_BOARD_ID;
  if (boardId) {
    console.log(`${colors.bright}üß™ –¢–µ—Å—Ç: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å–∫–∏ ${boardId}${colors.reset}`);
    try {
      const result = await mondayTool.getBoard({ 
        boardId, 
        includeItems: true,
        includeGroups: true,
        includeColumns: true
      });
      const data = JSON.parse(result);
      
      if (data.success) {
        console.log(`   ${colors.green}‚úÖ –£—Å–ø–µ—à–Ω–æ!${colors.reset}`);
        console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ—Å–∫–∏: ${data.data.name}`);
        successCount++;
      } else {
        console.log(`   ${colors.red}‚ùå –ù–µ—É–¥–∞—á–Ω–æ: ${data.error}${colors.reset}`);
        failCount++;
      }
    } catch (error) {
      console.log(`   ${colors.red}‚ùå –û—à–∏–±–∫–∞: ${error.message}${colors.reset}`);
      failCount++;
    }
    console.log();
  }

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log(`${colors.bright}${colors.magenta}=== –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ===${colors.reset}`);
  console.log(`${colors.green}‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${successCount}${colors.reset}`);
  console.log(`${colors.red}‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: ${failCount}${colors.reset}`);
  
  if (failCount === 0) {
    console.log(`\n${colors.bright}${colors.green}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ! API –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.${colors.reset}`);
  } else {
    console.log(`\n${colors.bright}${colors.yellow}‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.${colors.reset}`);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
testMondayAPI().catch(error => {
  console.error(`${colors.red}–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:`, error);
  process.exit(1);
}); 