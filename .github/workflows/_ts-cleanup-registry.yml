name: _TS Clean Up Docker Registry

on:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly at midnight on Sunday
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry run (no actual deletion)'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  cleanup:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install dependencies
      shell: bash
      run: |
        apt-get update
        apt-get install -y python3-pip
        pip3 install docker-registry-cli
        
    - name: Identify and delete orphaned images
      shell: bash
      env:
        REGISTRY_URL: registry.totalsoft.local
        REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
        REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        DRY_RUN: ${{ github.event.inputs.dryRun || 'true' }}
      run: |
        echo "Looking for orphaned images in $REGISTRY_URL"
        
        # List all repositories
        REPOS=$(registry-cli -r https://$REGISTRY_URL -l $REGISTRY_USERNAME:$REGISTRY_PASSWORD --list)
        
        echo "Found repositories: $REPOS"
        
        for REPO in $REPOS; do
          echo "Processing repository: $REPO"
          
          # Get all tags for this repository
          TAGS=$(registry-cli -r https://$REGISTRY_URL -l $REGISTRY_USERNAME:$REGISTRY_PASSWORD --tags $REPO)
          
          # Keep only the latest 5 tags for each repository
          if [ $(echo "$TAGS" | wc -l) -gt 5 ]; then
            # Sort tags by creation date (assuming version tags with dates or incremental numbers)
            # Keep the 5 most recent tags
            TAGS_TO_DELETE=$(echo "$TAGS" | sort -V | head -n -5)
            
            echo "Tags to keep for $REPO: $(echo "$TAGS" | sort -V | tail -n 5)"
            echo "Tags to delete for $REPO: $TAGS_TO_DELETE"
            
            # Delete old tags
            if [ "$DRY_RUN" = "false" ]; then
              for TAG in $TAGS_TO_DELETE; do
                echo "Deleting $REPO:$TAG"
                registry-cli -r https://$REGISTRY_URL -l $REGISTRY_USERNAME:$REGISTRY_PASSWORD --delete $REPO:$TAG
              done
            else
              echo "[DRY RUN] Would delete these tags: $TAGS_TO_DELETE"
            fi
          else
            echo "Repository $REPO has 5 or fewer tags, skipping cleanup"
          fi
        done
        
    - name: Run garbage collection
      shell: bash
      env:
        REGISTRY_POD: ${{ secrets.REGISTRY_POD_NAME }}
        REGISTRY_NAMESPACE: ${{ secrets.REGISTRY_NAMESPACE }}
        DRY_RUN: ${{ github.event.inputs.dryRun || 'true' }}
      run: |
        if [ "$DRY_RUN" = "false" ]; then
          echo "Running garbage collection to reclaim space"
          kubectl -n $REGISTRY_NAMESPACE exec -it $REGISTRY_POD -- bin/registry garbage-collect /etc/docker/registry/config.yml --delete-untagged=true
        else
          echo "[DRY RUN] Would run garbage collection"
        fi 