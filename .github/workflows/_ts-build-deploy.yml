name: Build and Deploy - Totalsoft Local

on:
  workflow_dispatch:
    inputs:
      imageTag:
        description: 'Docker image tag (required for feature branches)'
        required: false
        default: ''
      imageName:
        description: 'Docker image name'
        required: false
        default: 'ts-librechat'

jobs:
  build-and-deploy:
    runs-on: self-hosted
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - name: Set dynamic image tag
      id: set-tag
      shell: pwsh
      run: |
        $manualTag = "${{ github.event.inputs.imageTag }}"
        
        # If manual tag is provided, use it directly
        if (-not [string]::IsNullOrEmpty($manualTag)) {
          echo "IMAGE_TAG=$manualTag" >> $env:GITHUB_OUTPUT
          exit 0
        }
        
        # Get current branch name
        $branch = git rev-parse --abbrev-ref HEAD
        
        # Check if this is a release branch
        if ($branch -match "^release/(.+)$") {
          # Extract version from branch name (e.g., release/1.2.3 â†’ v1.2.3)
          $version = $matches[1]
          $tag = "v$version"
          
          echo "IMAGE_TAG=$tag" >> $env:GITHUB_OUTPUT
        } elseif ($branch -eq "main") {
          # For main branch, use dev
          echo "IMAGE_TAG=dev" >> $env:GITHUB_OUTPUT
        } else {
          # For feature branches, require a manually specified tag
          if ([string]::IsNullOrEmpty($manualTag)) {
            Write-Error "Error: imageTag parameter is required for feature branches. Please specify a tag."
            exit 1
          }
        }
      
    - name: Run build and deploy script
      shell: pwsh
      run: |
        $secretsHashtable = @{
          "MONGO_URI" = "${{ secrets.MONGO_URI }}"
          "CREDS_KEY" = "${{ secrets.CREDS_KEY }}"
          "CREDS_IV" = "${{ secrets.CREDS_IV }}"
          "JWT_SECRET" = "${{ secrets.JWT_SECRET }}"
          "JWT_REFRESH_SECRET" = "${{ secrets.JWT_REFRESH_SECRET }}"
          "SESSION_SECRET" = "${{ secrets.SESSION_SECRET }}"
          "AZURE_OPENAI_API_KEY" = "${{ secrets.AZURE_OPENAI_API_KEY }}"
          "EMAIL_PASSWORD" = "${{ secrets.EMAIL_PASSWORD }}"
          "REGISTRY_USERNAME" = "${{ secrets.REGISTRY_USERNAME }}"
          "REGISTRY_PASSWORD" = "${{ secrets.REGISTRY_PASSWORD }}"
          "GOOGLE_SEARCH_API_KEY" = "${{ secrets.GOOGLE_SEARCH_API_KEY }}"
          "GOOGLE_CSE_ID" = "${{ secrets.GOOGLE_CSE_ID }}"
        }

        $envVarsHashtable = @{
          "EMAIL_FROM" = "${{ vars.EMAIL_FROM }}"
          "EMAIL_FROM_NAME" = "${{ vars.EMAIL_FROM_NAME }}"
          "EMAIL_USERNAME" = "${{ vars.EMAIL_USERNAME }}"
          "EMAIL_SERVICE" = "${{ vars.EMAIL_SERVICE }}"
          "AZURE_OPENAI_INSTANCE" = "${{ vars.AZURE_OPENAI_INSTANCE }}"
          "ENDPOINTS" = "${{ vars.ENDPOINTS }}"
        }

        ./custom/scripts/build-and-deploy.ps1 `
          -ImageName "${{ github.event.inputs.imageName }}" `
          -ImageTag "${{ steps.set-tag.outputs.IMAGE_TAG }}" `
          -Registry "registry.totalsoft.local" `
          -Namespace "librechat" `
          -HelmReleaseName "librechat" `
          -RegistryUsername "${{ secrets.REGISTRY_USERNAME }}" `
          -RegistryPassword "${{ secrets.REGISTRY_PASSWORD }}" `
          -Secrets $secretsHashtable `
          -EnvVars $envVarsHashtable
