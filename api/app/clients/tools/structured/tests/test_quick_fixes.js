const MondayTool = require('./MondayTool');

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Monday.com API
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */
async function testQuickFixes() {
  const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk0MjExMjM5LCJhYWkiOjExLCJ1aWQiOjE3NzE5NjYwLCJpYWQiOiIyMDIwLTEyLTIzVDIwOjU4OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo3Nzc1MTUwLCJyZ24iOiJ1c2UxIn0.Gg8pbEhIdLEwlVu4azaVQK137bVbUMSww__yqIR1kTM';
  const mondayTool = new MondayTool({ apiKey });
  const testBoardId = '9261805849';

  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...\n');

  // –¢–µ—Å—Ç 1: createTeam (–∏—Å–ø—Ä–∞–≤–∏–ª–∏ description)
  console.log('1. –¢–µ—Å—Ç–∏—Ä—É–µ–º createTeam –±–µ–∑ description:');
  try {
    const result = await mondayTool._call({
      action: 'createTeam',
      teamName: `Quick Test Team ${Date.now()}`
    });
    const parsed = JSON.parse(result);
    if (parsed.success) {
      console.log('‚úÖ createTeam: –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ùå createTeam: –û–®–ò–ë–ö–ê -', parsed.error);
    }
  } catch (error) {
    console.log('‚ùå createTeam: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï -', error.message);
  }

  // –¢–µ—Å—Ç 2: createBoard (–ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ—Å—Ç—å)
  console.log('\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º createBoard:');
  try {
    const result = await mondayTool._call({
      action: 'createBoard',
      boardName: `Quick Test Board ${Date.now()}`,
      boardKind: 'public'
    });
    const parsed = JSON.parse(result);
    if (parsed.success) {
      console.log('‚úÖ createBoard: –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ùå createBoard: –û–®–ò–ë–ö–ê -', parsed.error);
    }
  } catch (error) {
    console.log('‚ùå createBoard: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï -', error.message);
  }

  // –¢–µ—Å—Ç 3: createWorkspace (–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)
  console.log('\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º createWorkspace (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥):');
  try {
    const result = await mondayTool._call({
      action: 'createWorkspace',
      workspaceName: `Quick Test Workspace ${Date.now()}`,
      workspaceKind: 'open'
    });
    const parsed = JSON.parse(result);
    if (parsed.success) {
      console.log('‚úÖ createWorkspace: –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ùå createWorkspace: –û–®–ò–ë–ö–ê -', parsed.error);
    }
  } catch (error) {
    console.log('‚ùå createWorkspace: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï -', error.message);
  }

  // –¢–µ—Å—Ç 4: getAssets (–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)
  console.log('\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º getAssets (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥):');
  try {
    const result = await mondayTool._call({
      action: 'getAssets',
      limit: 5
    });
    const parsed = JSON.parse(result);
    if (parsed.success) {
      console.log('‚úÖ getAssets: –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ùå getAssets: –û–®–ò–ë–ö–ê -', parsed.error);
    }
  } catch (error) {
    console.log('‚ùå getAssets: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï -', error.message);
  }

  // –¢–µ—Å—Ç 5: createColumn (–ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥)
  console.log('\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º createColumn (–Ω–æ–≤—ã–π –º–µ—Ç–æ–¥):');
  try {
    const result = await mondayTool._call({
      action: 'createColumn',
      boardId: testBoardId,
      title: `Quick Test Column ${Date.now()}`,
      columnType: 'text'
    });
    const parsed = JSON.parse(result);
    if (parsed.success) {
      console.log('‚úÖ createColumn: –†–ê–ë–û–¢–ê–ï–¢');
    } else {
      console.log('‚ùå createColumn: –û–®–ò–ë–ö–ê -', parsed.error);
    }
  } catch (error) {
    console.log('‚ùå createColumn: –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï -', error.message);
  }

  console.log('\nüèÅ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!');
}

testQuickFixes().catch(console.error); 