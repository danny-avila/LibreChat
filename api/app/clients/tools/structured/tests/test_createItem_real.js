const MondayTool = require('./MondayTool');

/**
 * –†–µ–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç createItem —Å –ø—Ä–æ–¥–∞–∫—à–µ–Ω API –∫–ª—é—á–æ–º
 */
async function testCreateItem() {
  const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk0MjExMjM5LCJhYWkiOjExLCJ1aWQiOjE3NzE5NjYwLCJpYWQiOiIyMDIwLTEyLTIzVDIwOjU4OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo3Nzc1MTUwLCJyZ24iOiJ1c2UxIn0.Gg8pbEhIdLEwlVu4azaVQK137bVbUMSww__yqIR1kTM';
  const mondayTool = new MondayTool({ apiKey });
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Ç–µ—Å—Ç–æ–≤—É—é –¥–æ—Å–∫—É
  const testBoardId = '9261805849'; // "Test Board Created by Tool"
  
  console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º createItem —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...\n');

  try {
    // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å–∫–µ
    console.log('üìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å–∫–µ...');
    const boardInfo = await mondayTool._call({
      action: 'getBoard',
      boardId: testBoardId,
      includeGroups: true,
      includeColumns: true,
      includeItems: false
    });
    
    const board = JSON.parse(boardInfo);
    console.log(`‚úÖ –î–æ—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: ${board.data.name}`);
    console.log(`üìä –ì—Ä—É–ø–ø: ${board.data.groups?.length || 0}`);
    console.log(`üìä –ö–æ–ª–æ–Ω–æ–∫: ${board.data.columns?.length || 0}`);
    
    if (board.data.groups && board.data.groups.length > 0) {
      console.log('üìã –ì—Ä—É–ø–ø—ã:');
      board.data.groups.forEach((group, index) => {
        console.log(`   ${index + 1}. ${group.title} (ID: ${group.id})`);
      });
    }
    
    if (board.data.columns && board.data.columns.length > 0) {
      console.log('üìã –ö–æ–ª–æ–Ω–∫–∏:');
      board.data.columns.forEach((column, index) => {
        console.log(`   ${index + 1}. ${column.title} (ID: ${column.id}, Type: ${column.type})`);
      });
    }

    // –®–∞–≥ 2: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
    console.log('\nüìã –®–∞–≥ 2: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç...');
    const simpleResult = await mondayTool._call({
      action: 'createItem',
      boardId: testBoardId,
      itemName: `–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç ${Date.now()}`,
      groupId: board.data.groups?.[0]?.id
    });
    
    const simpleItem = JSON.parse(simpleResult);
    if (simpleItem.success) {
      console.log(`‚úÖ –ü—Ä–æ—Å—Ç–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω: ${simpleItem.data.name} (ID: ${simpleItem.data.id})`);
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:`, simpleItem);
    }

    // –®–∞–≥ 3: –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –ø—Ä–æ—Å—Ç—ã–º–∏ column_values
    console.log('\nüìã –®–∞–≥ 3: –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –ø—Ä–æ—Å—Ç—ã–º–∏ column_values...');
    
    // –ù–∞–π–¥–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const textColumn = board.data.columns?.find(c => c.type === 'text');
    const numberColumn = board.data.columns?.find(c => c.type === 'numbers');
    
    if (textColumn || numberColumn) {
      const columnValues = {};
      
      if (textColumn) {
        columnValues[textColumn.id] = "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ";
        console.log(`   –ë—É–¥–µ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É: ${textColumn.title} (${textColumn.id})`);
      }
      
      if (numberColumn) {
        columnValues[numberColumn.id] = 42;
        console.log(`   –ë—É–¥–µ–º –∑–∞–ø–æ–ª–Ω—è—Ç—å —á–∏—Å–ª–æ–≤—É—é –∫–æ–ª–æ–Ω–∫—É: ${numberColumn.title} (${numberColumn.id})`);
      }
      
      console.log(`   Column values: ${JSON.stringify(columnValues, null, 2)}`);
      
      const columnResult = await mondayTool._call({
        action: 'createItem',
        boardId: testBoardId,
        itemName: `–≠–ª–µ–º–µ–Ω—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ ${Date.now()}`,
        groupId: board.data.groups?.[0]?.id,
        columnValues: columnValues,
        createLabelsIfMissing: true
      });
      
      const columnItem = JSON.parse(columnResult);
      if (columnItem.success) {
        console.log(`‚úÖ –≠–ª–µ–º–µ–Ω—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–∑–¥–∞–Ω: ${columnItem.data.name} (ID: ${columnItem.data.id})`);
        console.log(`   –ö–æ–ª–æ–Ω–æ–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ: ${columnItem.data.column_values?.length || 0}`);
      } else {
        console.log(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏:`, columnItem);
      }
    } else {
      console.log('‚ö†Ô∏è –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è column_values');
    }

    // –®–∞–≥ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('\nüìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã...');
    const itemsResult = await mondayTool._call({
      action: 'getItems',
      boardId: testBoardId,
      limit: 5,
      columnValues: true
    });
    
    const items = JSON.parse(itemsResult);
    if (items.success) {
      console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${items.data.length}`);
      items.data.forEach((item, index) => {
        console.log(`   ${index + 1}. ${item.name} (ID: ${item.id})`);
      });
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤:`, items);
    }

    console.log('\nüéØ –¢–µ—Å—Ç createItem –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testCreateItem(); 