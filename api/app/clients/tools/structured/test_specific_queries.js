const fetch = require('node-fetch');

const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk0MjExMjM5LCJhYWkiOjExLCJ1aWQiOjE3NzE5NjYwLCJpYWQiOiIyMDIwLTEyLTIzVDIwOjU4OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo3Nzc1MTUwLCJyZ24iOiJ1c2UxIn0.Gg8pbEhIdLEwlVu4azaVQK137bVbUMSww__yqIR1kTM';

async function testGraphQLQuery(query, variables, description) {
  console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${description}`);
  console.log(`üìã –ó–∞–ø—Ä–æ—Å:`, query.substring(0, 100) + '...');
  console.log(`üìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:`, JSON.stringify(variables, null, 2));

  try {
    const response = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({
        query: query,
        variables: variables
      })
    });

    const data = await response.json();
    
    if (response.ok && !data.errors) {
      console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ! –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`üìä –î–∞–Ω–Ω—ã–µ:`, JSON.stringify(data.data, null, 2));
      return { success: true, data: data.data };
    } else {
      console.log(`‚ùå –û—à–∏–±–∫–∞! –°—Ç–∞—Ç—É—Å: ${response.status}`);
      console.log(`‚ùå –û—à–∏–±–∫–∏:`, JSON.stringify(data.errors || data, null, 2));
      return { success: false, error: data.errors || data };
    }
  } catch (error) {
    console.log(`üí• –ò—Å–∫–ª—é—á–µ–Ω–∏–µ:`, error.message);
    return { success: false, error: error.message };
  }
}

async function runTests() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –æ—Ç–¥–µ–ª—å–Ω—ã—Ö GraphQL –∑–∞–ø—Ä–æ—Å–æ–≤...\n');

  // –¢–µ—Å—Ç 1: getBoard (–¥–µ—Ç–∞–ª–∏ –¥–æ—Å–∫–∏)
  await testGraphQLQuery(`
    query getBoard($boardId: [ID!]!) {
      boards(ids: $boardId) {
        id
        name
        description
        state
        board_kind
        workspace {
          id
          name
        }
        columns {
          id
          title
          type
          settings_str
        }
      }
    }
  `, {
    boardId: ['9261805849']
  }, 'GET_BOARD_DETAILS (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)');

  // –¢–µ—Å—Ç 2: createItem (–ø—Ä–æ—Å—Ç–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ)
  await testGraphQLQuery(`
    mutation createItem($boardId: ID!, $itemName: String!) {
      create_item(
        board_id: $boardId,
        item_name: $itemName
      ) {
        id
        name
        state
        board {
          id
          name
        }
      }
    }
  `, {
    boardId: '9261805849',
    itemName: `–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç ${Date.now()}`
  }, 'CREATE_ITEM (–ø—Ä–æ—Å—Ç–æ–µ)');

  // –¢–µ—Å—Ç 3: createGroup
  await testGraphQLQuery(`
    mutation createGroup($boardId: ID!, $groupName: String!) {
      create_group(
        board_id: $boardId,
        group_name: $groupName
      ) {
        id
        title
        color
        board {
          id
          name
        }
      }
    }
  `, {
    boardId: '9261805849',
    groupName: `–¢–µ—Å—Ç–æ–≤–∞—è –≥—Ä—É–ø–ø–∞ ${Date.now()}`
  }, 'CREATE_GROUP (–ø—Ä–æ—Å—Ç–æ–µ)');

  // –¢–µ—Å—Ç 4: getItems
  await testGraphQLQuery(`
    query getItems($boardId: [ID!]!, $limit: Int!) {
      boards(ids: $boardId) {
        items_page(limit: $limit) {
          cursor
          items {
            id
            name
            state
            group {
              id
              title
            }
            board {
              id
              name
            }
          }
        }
      }
    }
  `, {
    boardId: ['9261805849'],
    limit: 5
  }, 'GET_ITEMS (–ø—Ä–æ—Å—Ç–æ–µ)');

  // –¢–µ—Å—Ç 5: searchItems
  await testGraphQLQuery(`
    query searchItems($boardId: ID!, $query: String!, $limit: Int!) {
      items_page_by_column_values(
        limit: $limit,
        board_id: $boardId,
        columns: [
          {
            column_id: "name",
            column_values: [$query]
          }
        ]
      ) {
        cursor
        items {
          id
          name
          state
          board {
            id
            name
          }
        }
      }
    }
  `, {
    boardId: '9261805849',
    query: '–¢–µ—Å—Ç',
    limit: 5
  }, 'SEARCH_ITEMS (–ø—Ä–æ—Å—Ç–æ–µ)');

  console.log('\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

runTests(); 