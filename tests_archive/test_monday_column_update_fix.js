const fetch = require('node-fetch');

const apiKey = 'eyJhbGciOiJIUzI1NiJ9.eyJ0aWQiOjk0MjExMjM5LCJhYWkiOjExLCJ1aWQiOjE3NzE5NjYwLCJpYWQiOiIyMDIwLTEyLTIzVDIwOjU4OjQ1LjAwMFoiLCJwZXIiOiJtZTp3cml0ZSIsImFjdGlkIjo3Nzc1MTUwLCJyZ24iOiJ1c2UxIn0.Gg8pbEhIdLEwlVu4azaVQK137bVbUMSww__yqIR1kTM';

async function testColumnUpdate() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é Monday.com API –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫...\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å–∫–µ
    console.log('üìã –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å–∫–µ...');
    const boardQuery = `
      query {
        boards(limit: 1) {
          id
          name
          columns {
            id
            title
            type
          }
          items_page(limit: 1) {
            items {
              id
              name
              column_values {
                id
                type
                text
                value
              }
            }
          }
        }
      }
    `;

    const boardResponse = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({ query: boardQuery })
    });

    const boardData = await boardResponse.json();
    
    if (boardData.errors) {
      console.error('‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å–æ–∫:', boardData.errors);
      return;
    }

    const board = boardData.data.boards[0];
    const item = board.items_page.items[0];
    
    console.log(`‚úÖ –î–æ—Å–∫–∞: "${board.name}" (ID: ${board.id})`);
    console.log(`‚úÖ –≠–ª–µ–º–µ–Ω—Ç: "${item.name}" (ID: ${item.id})`);

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º change_simple_column_value (—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
    const textColumn = board.columns.find(col => col.type === 'text');
    if (textColumn) {
      console.log(`\nüîß –®–∞–≥ 2: –¢–µ—Å—Ç–∏—Ä—É–µ–º change_simple_column_value –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–æ–ª–æ–Ω–∫–∏ "${textColumn.title}"...`);
      
      const simpleValueMutation = `
        mutation {
          change_simple_column_value(
            board_id: ${board.id},
            item_id: ${item.id},
            column_id: "${textColumn.id}",
            value: "–û–±–Ω–æ–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ simple API ${new Date().toLocaleString()}"
          ) {
            id
            name
          }
        }
      `;

      const simpleResponse = await fetch('https://api.monday.com/v2', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': apiKey,
          'API-Version': '2024-10'
        },
        body: JSON.stringify({ query: simpleValueMutation })
      });

      const simpleData = await simpleResponse.json();
      
      if (simpleData.errors) {
        console.error('‚ùå –û—à–∏–±–∫–∏ change_simple_column_value:', simpleData.errors);
      } else {
        console.log('‚úÖ change_simple_column_value —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      }
    }

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º change_column_value —Å JSON (—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
    const statusColumn = board.columns.find(col => col.type === 'color' || col.type === 'status');
    if (statusColumn) {
      console.log(`\nüîß –®–∞–≥ 3: –¢–µ—Å—Ç–∏—Ä—É–µ–º change_column_value –¥–ª—è —Å—Ç–∞—Ç—É—Å –∫–æ–ª–æ–Ω–∫–∏ "${statusColumn.title}"...`);
      
      const jsonValueMutation = `
        mutation {
          change_column_value(
            board_id: ${board.id},
            item_id: ${item.id},
            column_id: "${statusColumn.id}",
            value: "{\\"index\\":1}"
          ) {
            id
            name
          }
        }
      `;

      const jsonResponse = await fetch('https://api.monday.com/v2', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': apiKey,
          'API-Version': '2024-10'
        },
        body: JSON.stringify({ query: jsonValueMutation })
      });

      const jsonData = await jsonResponse.json();
      
      if (jsonData.errors) {
        console.error('‚ùå –û—à–∏–±–∫–∏ change_column_value:', jsonData.errors);
      } else {
        console.log('‚úÖ change_column_value —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      }
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º change_multiple_column_values (—Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏)
    console.log(`\nüîß –®–∞–≥ 4: –¢–µ—Å—Ç–∏—Ä—É–µ–º change_multiple_column_values...`);
    
    const multipleValuesMutation = `
      mutation {
        change_multiple_column_values(
          board_id: ${board.id},
          item_id: ${item.id},
          column_values: "{\\"${textColumn?.id}\\":\\"Multiple test ${new Date().toLocaleString()}\\"}",
          create_labels_if_missing: false
        ) {
          id
          name
        }
      }
    `;

    const multipleResponse = await fetch('https://api.monday.com/v2', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': apiKey,
        'API-Version': '2024-10'
      },
      body: JSON.stringify({ query: multipleValuesMutation })
    });

    const multipleData = await multipleResponse.json();
    
    if (multipleData.errors) {
      console.error('‚ùå –û—à–∏–±–∫–∏ change_multiple_column_values:', multipleData.errors);
    } else {
      console.log('‚úÖ change_multiple_column_values —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í—Å–µ —Ç—Ä–∏ –º—É—Ç–∞—Ü–∏–∏ –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã.');

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message);
  }
}

testColumnUpdate();
