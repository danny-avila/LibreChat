console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç...');

const apiKey = process.env.MONDAY_API_KEY;
console.log('API Key:', apiKey ? 'SET' : 'NOT SET');

if (!apiKey) {
  console.error('‚ùå API –∫–ª—é—á –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  process.exit(1);
}

console.log('‚úÖ API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω');
console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º—ã–µ HTTP –∑–∞–ø—Ä–æ—Å—ã...');

const https = require('https');

const data = JSON.stringify({
  query: `
    query {
      me {
        id
        name
        email
      }
    }
  `
});

const options = {
  hostname: 'api.monday.com',
  port: 443,
  path: '/v2',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Authorization': apiKey,
    'Content-Length': Buffer.byteLength(data)
  }
};

console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å...');

const req = https.request(options, (res) => {
  console.log(`üìä –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
  
  let responseData = '';
  
  res.on('data', (chunk) => {
    responseData += chunk;
  });
  
  res.on('end', () => {
    console.log('üìã –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω');
    console.log('Response:', responseData);
    
    try {
      const parsed = JSON.parse(responseData);
      if (parsed.data && parsed.data.me) {
        console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', parsed.data.me.name);
      } else if (parsed.errors) {
        console.error('‚ùå GraphQL –æ—à–∏–±–∫–∏:', parsed.errors);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message);
    }
  });
});

req.on('error', (error) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', error.message);
});

console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...');
req.write(data);
req.end();
console.log('‚úÖ –ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω');
